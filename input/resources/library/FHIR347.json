{
  "resourceType": "Library",
  "id": "FHIR347",
  "meta": {
    "versionId": "7",
    "lastUpdated": "2021-04-29T08:31:39.000-06:00",
    "source": "#0FRgd7qfr2ZlB9xp",
    "profile": [ "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/computable-library-cqfm" ]
  },
  "language": "en",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "cqf-tooling"
    }
  } ],
  "url": "http://ecqi.healthit.gov/ecqms/Library/FHIR347",
  "version": "0.1.009",
  "name": "FHIR347",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "date": "2021-04-29T14:31:38+00:00",
  "publisher": "Mathematica",
  "description": "Statin Therapy for the Prevention and Treatment of Cardiovascular Disease FHIR",
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/FHIRHelpers|4.0.001"
  }, {
    "type": "depends-on",
    "display": "Library Global",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/MATGlobalCommonFunctionsFHIR4|5.0.000"
  }, {
    "type": "depends-on",
    "display": "Library SDE",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/SupplementalDataElementsFHIR4|2.0.000"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/FHIRHelpers|4.0.001"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://ecqi.healthit.gov/ecqms/Library/FHIRHelpers|4.0.001"
  }, {
    "type": "depends-on",
    "display": "Code system ICD10CM",
    "resource": "http://hl7.org/fhir/sid/icd-10-cm"
  }, {
    "type": "depends-on",
    "display": "Value set Annual Wellness Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1240"
  }, {
    "type": "depends-on",
    "display": "Value set Atherosclerosis and Peripheral Arterial Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.21"
  }, {
    "type": "depends-on",
    "display": "Value set Breastfeeding",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.73"
  }, {
    "type": "depends-on",
    "display": "Value set CABG Surgeries",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.666.5.694"
  }, {
    "type": "depends-on",
    "display": "Value set CABG, PCI Procedure",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1138.566"
  }, {
    "type": "depends-on",
    "display": "Value set Carotid Intervention",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.204"
  }, {
    "type": "depends-on",
    "display": "Value set Cerebrovascular Disease, Stroke, TIA",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.44"
  }, {
    "type": "depends-on",
    "display": "Value set Diabetes",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.103.12.1001"
  }, {
    "type": "depends-on",
    "display": "Value set End Stage Renal Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis A",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1024"
  }, {
    "type": "depends-on",
    "display": "Value set Hepatitis B",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.67.1.101.1.269"
  }, {
    "type": "depends-on",
    "display": "Value set High Intensity Statin Therapy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1572"
  }, {
    "type": "depends-on",
    "display": "Value set Hospice Care Ambulatory",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1584"
  }, {
    "type": "depends-on",
    "display": "Value set Hypercholesterolemia",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.100"
  }, {
    "type": "depends-on",
    "display": "Value set Ischemic Heart Disease or Other Related Diagnoses",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.46"
  }, {
    "type": "depends-on",
    "display": "Value set LDL Cholesterol",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
  }, {
    "type": "depends-on",
    "display": "Value set Liver Disease",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.42"
  }, {
    "type": "depends-on",
    "display": "Value set Low Intensity Statin Therapy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1574"
  }, {
    "type": "depends-on",
    "display": "Value set Moderate Intensity Statin Therapy",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1575"
  }, {
    "type": "depends-on",
    "display": "Value set Myocardial Infarction",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.403"
  }, {
    "type": "depends-on",
    "display": "Value set Office Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1001"
  }, {
    "type": "depends-on",
    "display": "Value set Outpatient Consultation",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1008"
  }, {
    "type": "depends-on",
    "display": "Value set Outpatient Encounters for Preventive Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1576"
  }, {
    "type": "depends-on",
    "display": "Value set Palliative Care Encounter",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1575"
  }, {
    "type": "depends-on",
    "display": "Value set Palliative or Hospice Care",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1579"
  }, {
    "type": "depends-on",
    "display": "Value set PCI",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1045.67"
  }, {
    "type": "depends-on",
    "display": "Value set Pregnancy or Other Related Diagnoses",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.600.1.1623"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services - Established Office Visit, 18 and Up",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1025"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services - Other",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1030"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services-Individual Counseling",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1026"
  }, {
    "type": "depends-on",
    "display": "Value set Preventive Care Services-Initial Office Visit, 18 and Up",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1023"
  }, {
    "type": "depends-on",
    "display": "Value set Rhabdomyolysis",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.102"
  }, {
    "type": "depends-on",
    "display": "Value set Stable and Unstable Angina",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.47"
  }, {
    "type": "depends-on",
    "display": "Value set Statin Allergen",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.42"
  }, {
    "type": "depends-on",
    "display": "Value set Payer",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "Adverse Reaction to Statin",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "AdverseEvent"
  }, {
    "name": "Allergy or Intolerance to Statin",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "AllergyIntolerance"
  }, {
    "name": "ASCVD Diagnosis or Procedure Before End of Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "Current or Prior LDL Result Greater Than or Equal To 190",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "Currently Taking Statin Therapy Through the End of the Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Qualifying Encounter During Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Encounter"
  }, {
    "name": "Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator 1",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has Hypercholesterolemia",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator 2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Patient Has Order for or Receiving Hospice Care or Palliative Care",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has ESRD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has Hepatitis or Liver Disease",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator Exceptions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator Exceptions 2",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Most Recent LDL Result Within 3 Years is Less Than 70",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator Exceptions 3",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has Diabetes",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Highest LDL Result Within 3 Years is Greater Than or Equal To 70 and Less Than 190",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "name": "Statin Therapy Ordered During Measurement Period",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "MedicationRequest"
  }, {
    "name": "Numerator",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "SDE Ethnicity",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Coding"
  }, {
    "name": "SDE Payer",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Any"
  }, {
    "name": "SDE Race",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Coding"
  }, {
    "name": "SDE Sex",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Coding"
  }, {
    "name": "Denominator 3",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Denominator Exclusions",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "AdverseEvent",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/AdverseEvent" ],
    "codeFilter": [ {
      "path": "event",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.42"
    } ],
    "dateFilter": [ {
      "path": "date",
      "_valueDateTime": {
        "extension": [ {
          "url": "http://hl7.org/fhir/StructureDefinition/cqf-expression",
          "valueExpression": {
            "language": "text/cql-identifier",
            "expression": "Measurement Period"
          }
        } ]
      }
    } ]
  }, {
    "type": "AllergyIntolerance",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.42"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1047.100"
    } ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "codeFilter": [ {
      "path": "type",
      "code": [ {
        "system": "http://hl7.org/fhir/sid/icd-10-cm",
        "code": "Z51.5",
        "display": "Encounter for palliative care"
      } ]
    }, {
      "path": "status",
      "code": [ {
        "code": "finished"
      } ]
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.353"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Condition",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Condition" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.103.12.1001"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "codeFilter": [ {
      "path": "code",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.526.3.1573"
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "codeFilter": [ {
      "path": "url",
      "code": [ {
        "code": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"
      } ]
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "codeFilter": [ {
      "path": "url",
      "code": [ {
        "code": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"
      } ]
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}